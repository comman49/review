<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
    		http://www.springframework.org/schema/beans
        	http://www.springframework.org/schema/beans/spring-beans.xsd
        	http://www.springframework.org/schema/mvc
        	http://www.springframework.org/schema/mvc/spring-mvc.xsd
        	http://www.springframework.org/schema/context
        	http://www.springframework.org/schema/context/spring-context.xsd
        	http://www.springframework.org/schema/security
        	http://www.springframework.org/schema/security/spring-security.xsd">
    
	<!-- <http auto-config="true"> 로그인페이지 자동 지원-->
	<http>
		<form-login 
			login-page="/joinus/login"
			default-target-url="/customer/notice"
		/>
		<logout logout-success-url= "/customer/notice"/>
		<intercept-url pattern="/customer/notice" access="ROLE_USER, ROLE_ADMIN"/>
		<intercept-url pattern="/customer/noticeReg" access="ROLE_ADMIN"/>
	</http>
	
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service 
			data-source-ref="dataSource"
			users-by-username-query="
				SELECT UID USERID, PWD PASSWORD, 1 ENABLED
				FROM MEMBERS
				WHERE UID=?
			"
			authorities-by-username-query="
				SELECT MEMBERUID USERID, ROLENAME AUTHORITIES
				FROM MEMBERROLES
				WHERE MEMBERUID=?
			"
			/>
			<!-- <user-service>
				<user name="newlec" password="1111" authorities="ROLE_USER, ROLE_ADMIN"/>
				<user name="dragon" password="1111" authorities="ROLE_USER"/>
			</user-service> -->
		</authentication-provider>
	</authentication-manager>
</beans:beans>

<!-- 위 설정을 해준 후 web.xml에서 필터를 추가해야 한다.
왜냐하면 로그인은 필터를 통해 이루어지기 때문이다,. -->